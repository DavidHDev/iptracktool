{"version":3,"sources":["components/themeswitch/ThemeSwitch.js","components/header/Header.js","components/input/InputBox.js","api/api.js","components/content/ContentBox.js","App.js","index.js"],"names":["ThemeSwitch","darkMode","useDarkMode","className","value","isChecked","onChange","toggle","colorScheme","size","Header","useState","scroll","setScroll","useEffect","document","addEventListener","scrollCheck","window","scrollY","InputBox","setContent","input","setInput","getContent","ip","axios","get","then","res","data","publicIp","v4","e","target","placeholder","disabled","onClick","variant","ContentBox","content","position","latitude","longitude","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","width","height","src","location","country_flag","alt","rel","href","continent_name","continent_code","country_name","country_code","region_name","region_code","city","zip","capital","languages","name","native","is_eu","toFixed","App","ReactDOM","render","resetCSS","getElementById"],"mappings":"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","file":"static/js/main.9abcc218.chunk.js","sourcesContent":["import './themeswitch.scss';\r\nimport React from 'react'\r\nimport { Switch } from \"@chakra-ui/react\"\r\nimport useDarkMode from 'use-dark-mode';\r\n\r\nexport const ThemeSwitch = () => {\r\n\r\n    const darkMode = useDarkMode(false);\r\n\r\n    return (\r\n        <div className=\"app-theme-switcher\">\r\n            {\r\n                darkMode.value === true \r\n                ? <i className=\"eva eva-moon-outline theme-icon\"></i>\r\n                : <i className=\"eva eva-sun-outline theme-icon\"></i>\r\n            }\r\n            <p className=\"theme-switch-text\">Dark Mode</p>\r\n            <Switch isChecked={darkMode.value} onChange={darkMode.toggle} className=\"app-switch\" colorScheme=\"cyan\" size=\"lg\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport { ThemeSwitch } from '../themeswitch/ThemeSwitch';\r\nimport './header.scss';\r\n\r\nexport const Header = () => {\r\n\r\n    const [scroll, setScroll] = useState(true)\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"scroll\", () => {\r\n            const scrollCheck = window.scrollY < 50\r\n            if (scrollCheck !== scroll) {\r\n              setScroll(scrollCheck)\r\n            }\r\n          })\r\n    })\r\n\r\n    return (\r\n        <div className={scroll ? 'app-header' : 'app-header app-header-small'}>\r\n            <ThemeSwitch></ThemeSwitch>\r\n            <div className={'header-bg'}></div>\r\n            <div className={'header-overlay'}></div>\r\n            <div className={'app-logo'}>\r\n                <i className={'eva eva-globe-outline logo-icon'}></i>\r\n                <p>IP TrackTool</p>\r\n            </div>\r\n            <h1 className=\"header-title\">{scroll ? 'Track any IP and discover essential information.' : ''}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport publicIp from 'public-ip';\r\nimport axios from 'axios';\r\nimport './input.scss';\r\nimport { Button, Input } from \"@chakra-ui/react\";\r\nimport { key } from '../../api/api';\r\n\r\nexport const InputBox = ({setContent}) => {\r\n\r\n    const [input, setInput] = useState('')\r\n\r\n    const [scroll, setScroll] = useState(true)\r\n\r\n    const getContent = (ip) => {\r\n        axios.get(`http://api.ipstack.com/${ip}?access_key=${key}`)\r\n            .then(res => {\r\n                setContent(res.data);\r\n            })\r\n    }\r\n\r\n    const getPublicIp = () => {\r\n        return publicIp.v4();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPublicIp()\r\n            .then(res => {\r\n                setInput(res);\r\n                getContent(res);\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"scroll\", () => {\r\n            const scrollCheck = window.scrollY < 50\r\n            if (scrollCheck !== scroll) {\r\n              setScroll(scrollCheck)\r\n            }\r\n          })\r\n    })\r\n\r\n    return (\r\n        <div className={scroll ? 'app-inputbox' : 'app-inputbox input-box-small'}>\r\n            <Input \r\n                value={input}\r\n                onChange={e => setInput(e.target.value)} \r\n                className={\"main-input\"} \r\n                placeholder='IP Address'>     \r\n            </Input>\r\n            <Input disabled className={\"main-input dummy-input\"}></Input>\r\n            <Button \r\n            onClick={() => getContent(input)} \r\n            className={\"main-button\"} \r\n            variant='outline'\r\n            >\r\n                Track\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n","export const key = '0ef9a48a70e10848b1ef7e709e014822';\r\n\r\n","import React from 'react';\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet'\r\nimport {\r\n    Stat,\r\n    StatLabel,\r\n    StatNumber,\r\n  } from \"@chakra-ui/react\"\r\nimport './contentbox.scss';\r\n\r\nexport const ContentBox = ({content}) => {\r\n\r\n    let position = [content.latitude, content.longitude]\r\n    \r\n    return (\r\n        <>\r\n            {content.ip &&\r\n            <div className=\"content-wrapper\">\r\n            <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\r\n                <TileLayer\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                <Marker position={position}></Marker>\r\n\r\n                <div className=\"content-flag\">\r\n                    <img className=\"flag-img\" width=\"50px\" height=\"50px\" src={content.location.country_flag} alt=\"country-flag\"/>\r\n                    <a \r\n                    className=\"street-link\" \r\n                    target=\"_blank\" \r\n                    rel=\"noreferrer\" \r\n                    href={`http://maps.google.com/maps?q=&layer=c&cbll=${content.latitude},${content.longitude}`}\r\n                    >\r\n                    <i className={'eva eva-map-outline'}></i>\r\n                    Street View\r\n                    </a>\r\n                </div>\r\n            </MapContainer>\r\n        \r\n            <div className='content-section-title'>\r\n                <h2 className=\"section-title\">General</h2>\r\n            </div>\r\n            <div className=\"general-content\">\r\n            <Stat>\r\n                <StatLabel>Continent</StatLabel>\r\n                <StatNumber>{`${content.continent_name} (${content.continent_code})`}</StatNumber>\r\n            </Stat>\r\n            <Stat>\r\n                <StatLabel>Country</StatLabel>\r\n                <StatNumber>{`${content.country_name} (${content.country_code})`}</StatNumber>\r\n            </Stat>\r\n            <Stat>\r\n                <StatLabel>Region</StatLabel>\r\n                <StatNumber>{`${content.region_name} (${content.region_code})`}</StatNumber>\r\n            </Stat>\r\n            <Stat>\r\n                <StatLabel>City</StatLabel>\r\n                <StatNumber>{`${content.city}`}</StatNumber>\r\n            </Stat>\r\n            </div>\r\n\r\n            <div className='content-section-title'>\r\n                <h2 className=\"section-title\">Details</h2>\r\n            </div>\r\n\r\n            <div className=\"general-content\">\r\n\r\n                <div className=\"details-list\">\r\n                    <div className=\"details-list-item\">\r\n                        <h3 className=\"list-item-title\">Zip Code</h3>\r\n                        <p className=\"list-item-descrip\">{content.zip}</p>\r\n                    </div>\r\n                    <div className=\"details-list-item\">\r\n                        <h3 className=\"list-item-title\">Capital</h3>\r\n                        <p className=\"list-item-descrip\">{content.location.capital}</p>\r\n                    </div>\r\n                    <div className=\"details-list-item\">\r\n                        <h3 className=\"list-item-title\">Language</h3>\r\n                        <p className=\"list-item-descrip\">{content.location.languages[0].name + ` (${content.location.languages[0].native})`}</p>\r\n                    </div>\r\n                    <div className=\"details-list-item\">\r\n                        <h3 className=\"list-item-title\">EU Member</h3>\r\n                        <p className=\"list-item-descrip\">{content.location.is_eu ? 'Yes' : 'No'}</p>\r\n                    </div>\r\n                    <div className=\"details-list-item\">\r\n                        <h3 className=\"list-item-title\">Coordinates</h3>\r\n                        <p className=\"list-item-descrip\">{`${content.latitude.toFixed(2)}, ${content.longitude.toFixed(2)}`}</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n            }\r\n            {!content.ip &&\r\n                <div className={'placeholder-map'}>\r\n                    <div className={'map-overlay'}></div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { Header } from './components/header/Header';\nimport { InputBox } from './components/input/InputBox';\nimport { ThemeSwitch } from './components/themeswitch/ThemeSwitch';\nimport { ContentBox } from './components/content/ContentBox';\n\nfunction App() {\n\n  const [content, setContent] = useState([])\n\n  return (\n    <div className=\"app\">\n      <Header></Header>\n      <InputBox setContent={setContent}></InputBox>\n      <ContentBox content={content}></ContentBox>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <ChakraProvider resetCSS={true}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}